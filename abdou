.model small
.stack 100h

.data
n db ?
message db "n= $" 
message2 db 10,13,"c=$"  
dix db 10
deux db 2

.code
main proc

   mov ax, @data
   mov ds, ax
   mov cx,0
   
       ; Afficher un message pour demander à l'utilisateur d'entrer un entier
    mov ah, 09h
    lea dx, message
    int 21h      
    
       ; Lire l'entier à partir du clavier
    mov ah, 01h ; fonction de lecture sans écho
    int 21h
    sub al, 30h ; convertir le caractère ASCII en nombre
     
    mov  ah,0
    mul dix 
    mov bl,al
    mov ah, 01h ; fonction de lecture sans écho
    int 21h
    sub al, 30h ; convertir le caractère ASCII en nombre
    add bl,al
    mov n, bl ; stocker le nombre dans la variable num
    mov bh ,0
    mov bl,n
    push bx 
    
    
    
    call colonne         
    pop bx




    

    mov ah, 09h
    lea dx, message2
    int 21h
    
    ;
    mov ax,0
    mov al,bl
    div dix 
    mov bl,al
    mov cl,ah
    mov ax,0
    mov al,cl 
    push ax 
    mov ax,0 
    mov al,bl
    div dix 
    mov cl,ah
    mov ax,0
    mov al,cl
    push ax

    mov ah, 02h
    pop dx
    add dl, 30h ; convertir le nombre en caractère ASCII
    int 21h
    mov ah, 02h
    pop dx
    add dl, 30h ; convertir le nombre en caractère ASCII  
    ;
    int 21h

    mov ah, 4Ch
    int 21h
            
 


   mov ah, 4ch
   int 21h
main endp 


ligne proc 

 
    mov bp,sp
     mov dx,[bp]
    mov cl,[bp+2] 

    mov al,50
    mov bl,1

    cmp cl,al
    jg outt
    cmp cl,bl
    jl outt

    mov bx,5
    mov ax,cx
    div bl
    cmp ah,0
    je restezero
    add al,1
    mov ah,0 
    push ax
    jmp fin:

    restezero:
    push ax
    jmp fin:
    outt: 
    mov al,0
    push ax

    fin:
    mov bp,dx
    push dx
    ret 
ligne endp
              
 colonne proc 

 
    mov bp,sp
    mov dx,[bp]
    mov cl,[bp+2] 

    mov al,50
    mov bl,1

    cmp cl,al
    jg outt2
    cmp cl,bl
    jl outt2

    mov bx,10
    mov ax,cx
    div bl
    cmp ah,0  
    
    je restezero2
    cmp ah,5
    jg sup 
    mov al,ah
    mov ah,0  
    mul deux  
    push ax
    jmp fin2:
    
    sup:  
    mov al,ah
    mov ah,0
    sub al,5  
    mul deux
    sub al,1
    push ax
    jmp fin2:
    restezero2:
    mov al,9
    push ax
    jmp fin2:
    outt2: 
    mov al,0
    push ax

    fin2:
    mov bp,dx
    push dx
    ret 
colonne endp             
              
              
end main
